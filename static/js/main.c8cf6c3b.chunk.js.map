{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pages","className","classNames","disabled","href","onClick","map","page","active","items","App","useState","setPage","itemsPerPage","setItemsPerPage","min","length","visibleItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQd,EAAW,EAAGW,GAc5B,OACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YACpB,CAAEC,SAA0B,IAAhBR,IAFhB,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACLC,QAtBiB,kBAEnBT,EADY,IAAhBD,EACiBA,EAAc,EACdA,IAoBX,gBAA+B,IAAhBA,EALjB,oBAUDK,EAAMM,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IAAW,YACpB,CAAEM,OAAQD,IAASZ,IAHvB,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMT,EAAaW,IAJ9B,SAMGA,KAVEA,MAcT,oBACEN,UAAWC,IAAW,YACpB,CAAEC,SAAUR,IAAgBE,IAFhC,SAIE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACLC,QA9CiB,kBAEnBT,EADJD,IAAgBE,EACCF,EAAc,EACdA,IA4CX,gBAAeA,IAAgBE,EALjC,wBC7DFY,EAAQvB,EAAW,EAAG,IACzBoB,KAAI,SAAAhB,GAAC,qBAAYA,MAEPoB,EAAgB,WAC3B,MAAwBC,mBAAS,GAAjC,mBAAOJ,EAAP,KAAaK,EAAb,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAEM3B,GAAQoB,EAAO,GAAKM,EACpBzB,EAAKU,KAAKiB,IAAIR,EAAOM,EAAcJ,EAAMO,QACzCC,EAAeR,EAAMS,MAAM/B,EAAMC,GAOvC,OACE,sBAAKa,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWM,EADX,mBAC0BpB,EAAO,EADjC,cACwCC,EADxC,eACiDqB,EAAMO,OADvD,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,MAAOP,EACPQ,SApBiB,SAACC,GAC1BR,GAAiBQ,EAAMC,OAAOH,OAC9BR,EAAQ,IAaF,UAOE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOgB,EAAMO,OACbtB,QAASmB,EACTlB,YAAaY,EACbX,aAAcgB,IAEhB,6BACGK,EAAaX,KAAI,SAAAmB,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCxDnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c8cf6c3b.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, totalPages);\n\n  const handleChangePrev = () => (\n    currentPage !== 1\n      ? onPageChange(currentPage - 1)\n      : onPageChange(currentPage)\n  );\n\n  const handleChangeNext = () => (\n    currentPage !== totalPages\n      ? onPageChange(currentPage + 1)\n      : onPageChange(currentPage)\n  );\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item',\n          { disabled: currentPage === 1 })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          onClick={handleChangePrev}\n          aria-disabled={currentPage === 1}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames('page-item',\n            { active: page === currentPage })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={classNames('page-item',\n          { disabled: currentPage === totalPages })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          onClick={handleChangeNext}\n          aria-disabled={currentPage === totalPages}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const from = (page - 1) * itemsPerPage;\n  const to = Math.min(page * itemsPerPage, items.length);\n  const visibleItems = items.slice(from, to);\n\n  const handleChangeSelect = (event:React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${from + 1} - ${to} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleChangeSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={page}\n        onPageChange={setPage}\n      />\n      <ul>\n        {visibleItems.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}